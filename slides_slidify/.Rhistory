install.packages('data.table')
install.packages('knitr')
install.packages('ggplot2')
help(t.test)
t.test
n <- 9
m <- c(-3, 1)
s <- c(1.8, 1.5)
rnorm(n, m, s)
rnorm(2*n, m, s)
idx <- seq(1, 19, 2)
idx
z[idx]
z <- rnorm(2*n, m, s)
idx <- seq(1, 19, 2)
idx <- seq(1, 17, 2)
t.test(z[idx], z[idx+1])
t.test(z[idx], z[idx+1])$p.value
res <- repeat(100, {
z <- rnorm(2*n, m, s)
idx <- seq(1, 17, 2)
t.test(z[idx], z[idx+1])$p.value
})
res <- repeat(100, {
z <- rnorm(2*n, m, s);
idx <- seq(1, 17, 2);
t.test(z[idx], z[idx+1])$p.value:
})
res <- repeat(100, {
z <- rnorm(2*n, m, s);
idx <- seq(1, 17, 2);
t.test(z[idx], z[idx+1])$p.value;
})
res <- replicate(n=100, {
z <- rnorm(2*n, m, s);
idx <- seq(1, 17, 2);
t.test(z[idx], z[idx+1])$p.value;
})
res
mean(res)
res <- replicate(n=1000, {
z <- rnorm(2*n, m, s);
idx <- seq(1, 17, 2);
t.test(z[idx], z[idx+1])$p.value;
})
mean(res)
res <- replicate(n=10000, {
z <- rnorm(2*n, m, s);
idx <- seq(1, 17, 2);
t.test(z[idx], z[idx+1])$p.value;
})
mean(res)
res <- replicate(n=100000, {
z <- rnorm(2*n, m, s);
idx <- seq(1, 17, 2);
t.test(z[idx], z[idx+1])$p.value;
})
mean(res)
res <- replicate(n=1000, {
z <- rnorm(2*n, m, s);
idx <- seq(1, 17, 2);
t.test(z[idx], z[idx+1])$p.value;
})
mean(res)
s <- c(1.8, 1.5)
res <- replicate(n=1000, {
z <- rnorm(2*n, m, s);
idx <- seq(1, 17, 2);
t.test(z[idx], z[idx+1])$p.value;
})
mean(res)
n <- c(20, 140, 100, 50)
0.01 - qnorm(0.05)*0.04/sqrt(n)
n <- c(20, 140, 100, 50)
0.01 - qnorm(0.1)*0.04/sqrt(n)
n <- c(20, 140, 100, 50)
qnorm(0.95)*0.04/sqrt(n)
n <- c(20, 140, 100, 50)
pnorm(qnorm(0.95)*0.04/sqrt(n))
pnorm(qnorm(0.95)*0.04/sqrt(n), 0.01, 0.04)
n <- c(20, 140, 100, 50)
pnorm(qnorm(0.95)*0.04/sqrt(n), 0.01, 0.04)
pnorm(qnorm(0.05)*0.04/sqrt(n),
0.01, 0.04)
n <- c(20, 140, 100, 50)
pnorm(qnorm(0.95)*0.04/sqrt(n),
0.01, 0.04)
pnorm((qnorm(0.95)*0.04/sqrt(n)-0.01)/0.04,
0.01, 0.04)
n <- c(20, 140, 100, 50)
pnorm((qnorm(0.95)*0.04/sqrt(n)-0.01)/0.04,
0.01, 0.04)
n <- c(20, 140, 100, 50)
1- pnorm((qnorm(0.95)*0.04/sqrt(n)-0.01)/0.04,
0.01, 0.04)
n <- c(20, 140, 100, 50)
1- pnorm((qnorm(0.05)*0.04/sqrt(n)-0.01)/0.04,
0.01, 0.04)
1-pnorm((qnorm(0.95)*0.04/sqrt(n)-0.01)/0.04,
0.01, 0.04)
n <- c(20, 140, 100, 50)
1-pnorm((qnorm(0.975)*0.04/sqrt(n)-0.01)/0.04,
0.01, 0.04)
n <- c(20, 140, 100, 50)
1-pnorm((qnorm(0.95)*0.04/sqrt(n)-0.01)/0.04,
0.01, 0.04)
n <- c(20, 140, 100, 50)
1-pnorm((qnorm(0.95)*0.04/sqrt(n)-0.01)/0.04)
n <- c(20, 140, 100, 50)
1- pnorm(qnorm(0.95 - 0.01/0.04/sqrt(n)))
n <- c(20, 140, 100, 50)
1- pnorm(qnorm(0.95 - 0.01/0.04*sqrt(n)))
n <- c(20, 140, 100, 50)
1- pnorm(qnorm(0.95 + 0.01/0.04*sqrt(n)))
n <- c(20, 140, 100, 50)
1- pnorm(qnorm(0.95) + 0.01/0.04*sqrt(n)))
n <- c(20, 140, 100, 50)
1- pnorm(qnorm(0.95) + 0.01/0.04*sqrt(n))
n <- c(20, 140, 100, 50)
1- pnorm(qnorm(0.95) - 0.01/0.04*sqrt(n))
1- pnorm(qnorm(0.975) - 2/12*sqrt(n))
n <- 288
1- pnorm(qnorm(0.975) - 2/12*sqrt(n))
strsplit(x, '\n')
2.233	-2.513	1.204	1.938	2.533"
strsplit(x, '\n')
x <- "0.929	-1.745	1.677	0.701	0.128
2.233	-2.513	1.204	1.938	2.533"
strsplit(x, '\n')
strsplit(x, '\n')[[1]]
strsplit(strsplit(x, '\n')[[1]], '\t')
lapply(strsplit(strsplit(x, '\n')[[1]], '\t')
as.numeric)
lapply(strsplit(strsplit(x, '\n')[[1]], '\t'),
as.numeric)
sapply(strsplit(strsplit(x, '\n')[[1]], '\t'),
as.numeric)
lapply(strsplit(strsplit(x, '\n')[[1]], '\t'),
as.numeric)
y <- lapply(strsplit(strsplit(x, '\n')[[1]], '\t'),
as.numeric)
y[[1]]/y[[2]]
y <- lapply(strsplit(strsplit(x, '\n')[[1]], '\t'),
as.numeric)
exp(y[[1]])/exp(y[[2]])
t.test(exp(y[[1]])/exp(y[[2]]))
t.test(y[[1]]y[[2]])
t.test(y[[1]], y[[2]])
t.test(y[[1]]/y[[2]])
t.test(exp(y[[1]])/exp(y[[2]]))
t.test(exp(-y[[1]])*exp(y[[2]]))
y[[1]]
y[[2]]
t.test(y[[2]]-y[[1]])
t.test(exp(y[[2]]-y[[1]]))
t.test(y[[2]]-y[[1]])
t.test(y[[2]]/y[[1]])
t.test(exp(y[[2]]/y[[1]]))
t.test(y[[2]]/y[[1]])
t.test(exp(-y[[2]]+y[[1]]))
t.test(-y[[2]]+y[[1]])
t.test(-y[[2]]+y[[1]])$conf.int
exp(t.test(-y[[2]]+y[[1]])$conf.int)
qnorm(0.9)
qnorm(0.95)
res <- replicate(n=1000, {
z1 <- rnorm(n, m[1], s[1]);
z2 <- rnorm(n, m[2], s[2]);
t.test(z1, z2)$p.value;
})
mean(res)
n <- 9
m <- c(-3, 1)
s <- c(1.8, 1.5)
res <- replicate(n=1000, {
z1 <- rnorm(n, m[1], s[1]);
z2 <- rnorm(n, m[2], s[2]);
t.test(z1, z2)$p.value;
})
mean(res)
n <- 9
m <- c(-3, 1)
s <- c(1.5, 1.8)
res <- replicate(n=1000, {
z1 <- rnorm(n, m[1], s[1]);
z2 <- rnorm(n, m[2], s[2]);
t.test(z1, z2)$p.value;
})
mean(res)
z1 <- rnorm(100, m[1], s[1]);
z2 <- rnorm(100, m[2], s[2]);
t.test(z1, z2)$p.value;
z1 <- rnorm(9, m[1], s[1]);
z2 <- rnorm(9, m[2], s[2]);
t.test(z1, z2)$p.value;
z1 <- rnorm(9, m[1], s[1]);
z2 <- rnorm(9, m[2], s[2]);
t.test(z1, z2)$p.value;
n <- 9
m <- c(-3, 1)
s <- c(1.5, 1.8)
res <- replicate(n=1000, {
n <- 9
m <- c(-3, 1)
s <- c(1.5, 1.8)
z1 <- rnorm(9, m[1], s[1]);
z2 <- rnorm(9, m[2], s[2]);
t.test(z1, z2)$p.value;
})
res
mean(res)
z1 <- rnorm(9, m[1], s[1]);
z2 <- rnorm(9, m[2], s[2]);
t.test(z1, z2)$p.value;
z1 <- rnorm(9, m[1], s[1]);
z2 <- rnorm(9, m[2], s[2]);
t.test(z1, z2)$p.value;
z1 <- rnorm(9, m[1], s[1]);
z2 <- rnorm(9, m[2], s[2]);
t.test(z1, z2)$p.value;
z1 <- rnorm(9, m[1], s[1]);
z2 <- rnorm(9, m[2], s[2]);
t.test(z1, z2)$p.value;
z1 <- rnorm(9, m[1], s[1]);
z2 <- rnorm(9, m[2], s[2]);
t.test(z1, z2)$p.value;
res <- replicate(n=10000, {
z1 <- rnorm(9, m[1], s[1]);
z2 <- rnorm(9, m[2], s[2]);
t.test(z1, z2)$p.value;
})
mean(res)
diff(m)
diff(m)/sqrt(sum(s/9))
diff(m)/sqrt(sum(s^2/9))
num <- sum(s^2/9)
den <- (s[1]^2/9)^2/(8) +(s[2]^2/9)^2/(8)
num/den
t.stat <- diff(m)/sqrt(sum(s^2/9))
num <- sum(s^2/9)
den <- (s[1]^2/9)^2/(8) +(s[2]^2/9)^2/(8)
pt(t.stat, num/den)
1 - pt(t.stat, num/den)
(1 - pt(t.stat, num/den))*2
num <- sum(s^2/9)^2
den <- (s[1]^2/9)^2/(8) +(s[2]^2/9)^2/(8)
(1 - pt(t.stat, num/den))*2
n <- 288
1- pnorm(qnorm(0.975) - 2/12*sqrt(n))
n <- 288
1- pnorm(qnorm(0.975) + 2/12*sqrt(n))
n <- 288
1- pnorm(qnorm(0.975) - 2/12*sqrt(n))
n <- 144
1- pnorm(qnorm(0.975) - 2/12*sqrt(n))
n <- 288
1- pnorm(qnorm(0.975) - 2/12*sqrt(n))
n <- 144
1- pnorm(qnorm(0.975) - 2/12*sqrt(n))
q()
install.packages('randomForest')
getwd()
setwd("~/Dropbox/VizD3/snf_researcher/slides_slidify")
library('slidify')
slidify('index.Rmd')
slidify('index.Rmd')
help(load)
eval(load('../data/dat_clean.RData', .GlobalEnv)) # load dat
eval(load('../data/dat_agg_clean.RData', .GlobalEnv)) # load list dat.agg
head(dat.agg)
head(dat)
dat.base <- dat[, .N, by = 'project_year,base_disc_name']
ggplot(dat.base, aes(factor(project_year), N)) +
geom_bar(aes(fill = base_disc_name), stat='identity', position = 'dodge') +
scale_fill_brewer(palette = 'RdYlBu') +
labs('title' = 'Project by Year and Disciplin', fill = 'Discipline')
slidify('index.Rmd')
update.packages(ask=F)
summary(cars)
library('devtools')
install_github("slidify", "ramnathv")
install_github("slidifyLibraries", "ramnathv")
slidify('index.Rmd')
load('../data/dat_clean.RData', .GlobalEnv) # load dat
dat.base <- dat[, .N, by = 'project_year,base_disc_name']
p <- ggplot(dat.base, aes(factor(project_year), N)) +
geom_bar(aes_string(fill = 'base_disc_name'), stat='identity', position = 'dodge') +
scale_fill_brewer(palette = 'RdYlBu') +
labs('title' = 'Project by Year and Disciplin', fill = 'Discipline')
print(p)
